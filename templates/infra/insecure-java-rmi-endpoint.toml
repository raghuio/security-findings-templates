[metadata]
finding_id = ""
title = "Insecure Java RMI Endpoint"
date_discovered = "" # YYYY-MM-DD
date_reported = "" # YYYY-MM-DD
assessment_id = ""
author = ""
client_id = ""
status = "" # E.g., "open", "in_progress", "fixed", "closed"

[classification]
severity = "Critical" # E.g., "critical", "high", "medium", "low", "informational"
cvss_score = 0.0 # Adjust as needed
cvss_vector = "" # CVSS v3.1/v4 vector string
cwe_id = "" # Numeric portion only
owasp_category = "" 

[affected_components]
system = ""
component = ""
version = ""
location = "" # E.g., URL, file path, code line
endpoints = [] # Array of strings

[details]
description = """The following server endpoints use an insecure Java RMI endpoint allowing for unauthenticated remote code execution.
Quoting the exploit discussion from [1], the default configuration of the RMI Registry and RMI Activation services, which allow loading classes from any remote (HTTP) URL. As it invokes a method in the RMI Distributed Garbage Collector which is available via every RMI endpoint, it can be used against both rmiregistry and rmid, and against most other (custom) RMI endpoints as well. Note that it does not work against Java Management Extension (JMX) ports since those do not support remote class loading, unless another RMI endpoint is active in the same Java process.
RMI method calls do not support or require any sort of authentication."""
impact = ""

[reproduction]
steps = [] 
payload = ""

[proof_of_concept]
code = ""
curl_command = ""

[remediation]
recommendation = ""

[references]
cve_ids = [] # Array of CVE IDs
external_references = ["https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/java_rmi_server.rb"]
