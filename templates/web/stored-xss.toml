# Master Vulnerability Finding Template
# Format: TOML (Tom's Obvious Minimal Language)
# Version: 1.0.0
# Description: Generic vulnerability finding template for cross-language compatibility

[metadata]
finding_id = ""  # Unique identifier (string)
title = "Stored Cross-Site Scripting (XSS)"  # Brief, descriptive title (string)
date_discovered = ""  # ISO 8601 format: YYYY-MM-DD (string)
date_reported = ""  # ISO 8601 format: YYYY-MM-DD (string)
assessment_id = ""  # Reference to parent assessment (string)
author = ""  # Name of person who discovered the vulnerability (string)
reviewer = ""  # Name of person who verified the finding (string)
client_id = ""  # Client identifier (string)
status = ""  # One of: "open", "in_progress", "fixed", "closed", "duplicate", "wont_fix", "false_positive" (string)
confidentiality = ""  # One of: "public", "internal", "restricted", "confidential" (string)

[classification]
severity = "High"  # One of: "critical", "high", "medium", "low", "informational" (string)
cvss_score = 7.2  # Float value between 0.0 and 10.0
cvss_vector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N"  # CVSS v3.1/v4 vector string
cwe_id = ""  # CWE identifier (string, numeric portion only)
cwe_name = ""  # Full CWE name (string)
owasp_category = "A03:2021-Injection"  # OWASP category identifier (string)

[affected_components]
system = ""  # System name (string)
component = ""  # Component name (string)
version = ""  # Version identifier (string)
location = ""  # File path, URL, or location descriptor (string)
endpoints = []  # Array of strings
technologies = []  # Array of strings

[details]
description = ""  # Plain text description (string)
impact = ""  # Plain text description of impact (string)
root_cause = ""  # Plain text description of root cause (string)

[reproduction]
preconditions = ""  # Plain text description of preconditions (string)
steps = [
    "Identify an input field that stores and reflects user-supplied data without proper sanitization (e.g., comment section, user profile).",
    "Inject a malicious script payload (e.g., <script>alert('XSS')</script>) into the input field.",
    "Submit the input.",
    "Observe that the script executes when the page displaying the stored data is loaded by any user."
]  # Array of strings, each representing a step
payload = ""  # Example payload (string)
screenshots = []  # Array of strings, each a file path or URL

[proof_of_concept]
code = ""  # Code demonstration (string)
curl_command = ""  # Example curl command (string)

[remediation]
recommendation = "Implement robust input validation and output encoding for all user-supplied data. Use context-aware encoding (e.g., HTML entity encoding for HTML context, JavaScript encoding for script context). Consider using a Content Security Policy (CSP) to mitigate XSS impact."  # Plain text recommendation (string)
code_fix = ""  # Example code fix (string)
estimated_effort = ""  # One of: "low", "medium", "high" (string)
timeline = ""  # Recommended remediation timeline (string)

[references]
cve_ids = []  # Array of CVE IDs (strings)
external_references = [
    "https://owasp.org/www-community/attacks/xss/",
    "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
]  # Array of URLs or reference strings
internal_references = []  # Array of internal document references (strings)

[communication]
disclosed_to = ""  # Person and contact info (string)
disclosed_on = ""  # ISO 8601 format: YYYY-MM-DD (string)
response = ""  # Plain text response from stakeholders (string)

[tracking]
issue_tracker_id = ""  # ID in issue tracking system (string)
pull_request = ""  # PR identifier (string)
fix_version = ""  # Version where fix is implemented (string)
fix_date = ""  # ISO 8601 format: YYYY-MM-DD (string)
verification_date = ""  # ISO 8601 format: YYYY-MM-DD (string)

[compliance]
regulatory_impact = []  # Array of regulatory standards affected (strings)
business_impact = ""  # One of: "low", "medium", "high", "critical" (string)
data_breach_risk = false  # Boolean indicating data breach risk

[additional_info]
notes = ""  # Additional information (string)
tags = []  # Array of tag strings
linked_findings = []  # Array of related finding IDs (strings)
