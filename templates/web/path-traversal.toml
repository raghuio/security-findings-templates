[metadata]
finding_id = ""
title = "Path Traversal"
date_discovered = "" # YYYY-MM-DD
date_reported = "" # YYYY-MM-DD
assessment_id = ""
author = ""
client_id = ""
status = "" # E.g., "open", "in_progress", "fixed", "closed"

[classification]
severity = "High" # E.g., "critical", "high", "medium", "low", "informational"
cvss_score = 0.0 # Adjust as needed
cvss_vector = "" # CVSS v3.1/v4 vector string
cwe_id = "" # Numeric portion only
owasp_category = "" 

[affected_components]
system = ""
component = ""
version = ""
location = "" # E.g., URL, file path, code line
endpoints = [] # Array of strings

[details]
description = """Quoting from [1], a Path Traversal attack aims to access files and directories that are stored outside the web root folder. By browsing the application, the attacker looks for absolute links to files stored on the web server. By manipulating variables that reference files with “dot-dot-slash (../)” sequences and its variations, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration and critical system files, limited by system operational access control. The attacker uses “../” sequences to move up to root directory, thus permitting navigation through the file system.
This attack can be executed with an external malicious code injected on the path, like the Resource Injection attack. To perform this attack it’s not necessary to use a specific tool; attackers typically use a spider/crawler to detect all URLs available.
This attack is also known as “dot-dot-slash”, “directory traversal”, “directory climbing” and “backtracking”."""
impact = ""

[reproduction]
steps = [] 
payload = ""

[proof_of_concept]
code = ""
curl_command = ""

[remediation]
recommendation = ""

[references]
cve_ids = [] # Array of CVE IDs
external_references = [
    "https://www.owasp.org/index.php/Path_Traversal",
    "http://cwe.mitre.org/data/definitions/22.html",
    "http://www.webappsec.org/projects/threat/classes/path_traversal.shtml"
]
